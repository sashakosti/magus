package cmd

import (
	"fmt"
	"magus/player"
	"magus/storage"
	"os"
	"time"
)

func Complete() {
	if len(os.Args) < 3 {
		fmt.Println("Usage: magus complete <quest_id>")
		return
	}
	questID := os.Args[2]

	quests, err := storage.LoadAllQuests()
	if err != nil {
		fmt.Println("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–≤–µ—Å—Ç–æ–≤:", err)
		return
	}

	var found bool
	var xpGained int
	for i, q := range quests {
		if q.ID == questID {
			if q.Type == player.Daily {
				if isToday(q.CompletedAt) {
					fmt.Println("‚ö†Ô∏è –≠—Ç–æ—Ç –¥–µ–π–ª–∏–∫ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å–µ–≥–æ–¥–Ω—è.")
					return
				}
				quests[i].CompletedAt = time.Now()
			} else {
				if q.Completed {
					fmt.Println("‚ö†Ô∏è –ö–≤–µ—Å—Ç —É–∂–µ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω —Ä–∞–Ω–µ–µ.")
					return
				}
				quests[i].Completed = true
			}

			xpGained = q.XP
			found = true
			break
		}
	}

	if !found {
		fmt.Println("‚ö†Ô∏è –ö–≤–µ—Å—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		return
	}

	if err := storage.SaveAllQuests(quests); err != nil {
		fmt.Println("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤:", err)
		return
	}

	fmt.Println("‚úÖ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!")

	if xpGained > 0 {
		canLevelUp, err := player.AddXP(xpGained)
		if err != nil {
			fmt.Println("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∏—Å–ª–∏—Ç—å XP:", err)
		} else {
			fmt.Printf("‚ú® +%d XP!\n", xpGained)
			if canLevelUp {
				fmt.Println("üî• –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å! –ó–∞–ø—É—Å—Ç–∏—Ç–µ `magus` –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∫–∞.")
			}
		}
	}
}


