package tui

import (
	"fmt"

	"magus/player"
	"magus/rpg"

	"github.com/charmbracelet/bubbletea"
	"github.com/charmbracelet/lipgloss"
)

func (m *Model) updateLevelUp(msg tea.Msg) (tea.Model, tea.Cmd) {
	if key, ok := msg.(tea.KeyMsg); ok {
		switch key.String() {
		case "up", "k":
			if m.cursor > 0 {
				m.cursor--
			}
		case "down", "j":
			if m.cursor < len(m.skillChoices)-1 {
				m.cursor++
			}
		case "enter":
			chosenSkill := m.skillChoices[m.cursor]
			// –ú—ã –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º LevelUpPlayer –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ—á–∫–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.
			// –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ, –º—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞–≤—ã–∫.
			err := m.unlockSkill(chosenSkill.ID)
			if err != nil {
				m.statusMessage = fmt.Sprintf("‚ùó –û—à–∏–±–∫–∞ –∏–∑—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞: %v", err)
			} else {
				m.statusMessage = fmt.Sprintf("‚ú® –í—ã –∏–∑—É—á–∏–ª–∏ –Ω–∞–≤—ã–∫: %s!", chosenSkill.Name)
			}

			// –û–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞
			p, _ := player.LoadPlayer()
			m.player = *p

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–±–∏—Ä–∞—Ç—å –∫–ª–∞—Å—Å
			if m.player.Level >= 3 && m.player.Class == player.ClassNone {
				m.state = stateClassChoice
				m.classChoices = rpg.GetAvailableClasses()
				m.cursor = 0
			} else {
				m.state = stateHomepage
			}
			return m, nil
		}
	}
	return m, nil
}

func (m *Model) viewLevelUp() string {
	s := "üî• –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!\n\n"
	s += "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–≤—ã–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:\n\n"
	for i, skill := range m.skillChoices {
		cursor := " "
		if m.cursor == i {
			cursor = ">"
		}
		s += fmt.Sprintf("%s %s: %s\n", cursor, skill.Name, skill.Description)
	}
	s += "\n–ù–∞–∂–º–∏—Ç–µ 'enter' –¥–ª—è –≤—ã–±–æ—Ä–∞.\n"
	return lipgloss.NewStyle().Border(lipgloss.DoubleBorder(), true).Padding(2).Render(s)
}
